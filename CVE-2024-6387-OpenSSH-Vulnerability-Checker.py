import subprocess
import re

def get_openssh_version():
    result = subprocess.run(['ssh', '-V'], stderr=subprocess.PIPE, stdout=subprocess.PIPE)
    version_info = result.stderr.decode('utf-8').strip()
    return version_info

def is_vulnerable(version_info):
    match = re.search(r'OpenSSH(?:_for_Windows)?_([\d\.]+)p(\d+)', version_info)
    if not match:
        return "Unknown version format"

    major_minor, patch = match.groups()
    major, minor = map(int, major_minor.split('.'))

    if (major < 4) or (major == 4 and minor < 4):
        return "Vulnerable unless patched for CVE-2006-5051 and CVE-2008-4109"
    elif (major == 4 and minor >= 4) or (major > 4 and major < 8) or (major == 8 and minor < 5):
        return "Not vulnerable"
    elif (major == 8 and minor >= 5) or (major > 8 and major < 9) or (major == 9 and minor < 8):
        return "Vulnerable"
    else:
        return "Not vulnerable"

print("CVE-2024-6387 OpenSSH Vulnerability Checker")
print("------------------------------------------")
print("This script has been tested on Ubuntu and Mac and Windows11 systems.")
print("The script results are for reference only.")
print("For a thorough security assessment, consult with a security expert.")
print("If a vulnerable version is detected, consult with your system administrator to apply appropriate updates or patches.")
print("------------------------------------------")
print("OpenSSH versions earlier than 4.4p1 are vulnerable unless patched for CVE-2006-5051 or CVE-2008-4109.")
print("OpenSSH 4.4p1 or later, but not earlier than 8.5p1, is not vulnerable.")
print("OpenSSH 8.5p1 and later, but not earlier than 9.8p1, are again vulnerable.")
print("------------------------------------------")

# Get and print the OpenSSH version
version_info = get_openssh_version()
print(f"OpenSSH version info: {version_info}")

# Check if the version is vulnerable
vulnerability_status = is_vulnerable(version_info)
print(f"Vulnerability status: {vulnerability_status}")
